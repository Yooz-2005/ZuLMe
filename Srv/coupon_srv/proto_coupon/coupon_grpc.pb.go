// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v3.19.4
// source: coupon.proto

package proto_coupon

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	CouponService_GrantCoupon_FullMethodName               = "/coupon.CouponService/GrantCoupon"
	CouponService_GetUserCoupons_FullMethodName            = "/coupon.CouponService/GetUserCoupons"
	CouponService_GetAvailableCoupons_FullMethodName       = "/coupon.CouponService/GetAvailableCoupons"
	CouponService_ValidateCoupon_FullMethodName            = "/coupon.CouponService/ValidateCoupon"
	CouponService_UseCoupon_FullMethodName                 = "/coupon.CouponService/UseCoupon"
	CouponService_CreateActivity_FullMethodName            = "/coupon.CouponService/CreateActivity"
	CouponService_UpdateActivity_FullMethodName            = "/coupon.CouponService/UpdateActivity"
	CouponService_DeleteActivity_FullMethodName            = "/coupon.CouponService/DeleteActivity"
	CouponService_GetActivity_FullMethodName               = "/coupon.CouponService/GetActivity"
	CouponService_GetActivityList_FullMethodName           = "/coupon.CouponService/GetActivityList"
	CouponService_DistributeActivityCoupons_FullMethodName = "/coupon.CouponService/DistributeActivityCoupons"
)

// CouponServiceClient is the client API for CouponService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// 优惠券服务
type CouponServiceClient interface {
	// 发放优惠券
	GrantCoupon(ctx context.Context, in *GrantCouponRequest, opts ...grpc.CallOption) (*GrantCouponResponse, error)
	// 获取用户优惠券列表
	GetUserCoupons(ctx context.Context, in *GetUserCouponsRequest, opts ...grpc.CallOption) (*GetUserCouponsResponse, error)
	// 获取用户可用优惠券
	GetAvailableCoupons(ctx context.Context, in *GetAvailableCouponsRequest, opts ...grpc.CallOption) (*GetAvailableCouponsResponse, error)
	// 验证优惠券
	ValidateCoupon(ctx context.Context, in *ValidateCouponRequest, opts ...grpc.CallOption) (*ValidateCouponResponse, error)
	// 使用优惠券
	UseCoupon(ctx context.Context, in *UseCouponRequest, opts ...grpc.CallOption) (*UseCouponResponse, error)
	// ===== 活动管理接口 =====
	// 创建活动
	CreateActivity(ctx context.Context, in *CreateActivityRequest, opts ...grpc.CallOption) (*CreateActivityResponse, error)
	// 更新活动
	UpdateActivity(ctx context.Context, in *UpdateActivityRequest, opts ...grpc.CallOption) (*UpdateActivityResponse, error)
	// 删除活动
	DeleteActivity(ctx context.Context, in *DeleteActivityRequest, opts ...grpc.CallOption) (*DeleteActivityResponse, error)
	// 获取活动详情
	GetActivity(ctx context.Context, in *GetActivityRequest, opts ...grpc.CallOption) (*GetActivityResponse, error)
	// 获取活动列表
	GetActivityList(ctx context.Context, in *GetActivityListRequest, opts ...grpc.CallOption) (*GetActivityListResponse, error)
	// 分发活动优惠券
	DistributeActivityCoupons(ctx context.Context, in *DistributeActivityCouponsRequest, opts ...grpc.CallOption) (*DistributeActivityCouponsResponse, error)
}

type couponServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCouponServiceClient(cc grpc.ClientConnInterface) CouponServiceClient {
	return &couponServiceClient{cc}
}

func (c *couponServiceClient) GrantCoupon(ctx context.Context, in *GrantCouponRequest, opts ...grpc.CallOption) (*GrantCouponResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GrantCouponResponse)
	err := c.cc.Invoke(ctx, CouponService_GrantCoupon_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponServiceClient) GetUserCoupons(ctx context.Context, in *GetUserCouponsRequest, opts ...grpc.CallOption) (*GetUserCouponsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetUserCouponsResponse)
	err := c.cc.Invoke(ctx, CouponService_GetUserCoupons_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponServiceClient) GetAvailableCoupons(ctx context.Context, in *GetAvailableCouponsRequest, opts ...grpc.CallOption) (*GetAvailableCouponsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetAvailableCouponsResponse)
	err := c.cc.Invoke(ctx, CouponService_GetAvailableCoupons_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponServiceClient) ValidateCoupon(ctx context.Context, in *ValidateCouponRequest, opts ...grpc.CallOption) (*ValidateCouponResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ValidateCouponResponse)
	err := c.cc.Invoke(ctx, CouponService_ValidateCoupon_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponServiceClient) UseCoupon(ctx context.Context, in *UseCouponRequest, opts ...grpc.CallOption) (*UseCouponResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UseCouponResponse)
	err := c.cc.Invoke(ctx, CouponService_UseCoupon_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponServiceClient) CreateActivity(ctx context.Context, in *CreateActivityRequest, opts ...grpc.CallOption) (*CreateActivityResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateActivityResponse)
	err := c.cc.Invoke(ctx, CouponService_CreateActivity_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponServiceClient) UpdateActivity(ctx context.Context, in *UpdateActivityRequest, opts ...grpc.CallOption) (*UpdateActivityResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UpdateActivityResponse)
	err := c.cc.Invoke(ctx, CouponService_UpdateActivity_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponServiceClient) DeleteActivity(ctx context.Context, in *DeleteActivityRequest, opts ...grpc.CallOption) (*DeleteActivityResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DeleteActivityResponse)
	err := c.cc.Invoke(ctx, CouponService_DeleteActivity_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponServiceClient) GetActivity(ctx context.Context, in *GetActivityRequest, opts ...grpc.CallOption) (*GetActivityResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetActivityResponse)
	err := c.cc.Invoke(ctx, CouponService_GetActivity_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponServiceClient) GetActivityList(ctx context.Context, in *GetActivityListRequest, opts ...grpc.CallOption) (*GetActivityListResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetActivityListResponse)
	err := c.cc.Invoke(ctx, CouponService_GetActivityList_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponServiceClient) DistributeActivityCoupons(ctx context.Context, in *DistributeActivityCouponsRequest, opts ...grpc.CallOption) (*DistributeActivityCouponsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DistributeActivityCouponsResponse)
	err := c.cc.Invoke(ctx, CouponService_DistributeActivityCoupons_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CouponServiceServer is the server API for CouponService service.
// All implementations must embed UnimplementedCouponServiceServer
// for forward compatibility.
//
// 优惠券服务
type CouponServiceServer interface {
	// 发放优惠券
	GrantCoupon(context.Context, *GrantCouponRequest) (*GrantCouponResponse, error)
	// 获取用户优惠券列表
	GetUserCoupons(context.Context, *GetUserCouponsRequest) (*GetUserCouponsResponse, error)
	// 获取用户可用优惠券
	GetAvailableCoupons(context.Context, *GetAvailableCouponsRequest) (*GetAvailableCouponsResponse, error)
	// 验证优惠券
	ValidateCoupon(context.Context, *ValidateCouponRequest) (*ValidateCouponResponse, error)
	// 使用优惠券
	UseCoupon(context.Context, *UseCouponRequest) (*UseCouponResponse, error)
	// ===== 活动管理接口 =====
	// 创建活动
	CreateActivity(context.Context, *CreateActivityRequest) (*CreateActivityResponse, error)
	// 更新活动
	UpdateActivity(context.Context, *UpdateActivityRequest) (*UpdateActivityResponse, error)
	// 删除活动
	DeleteActivity(context.Context, *DeleteActivityRequest) (*DeleteActivityResponse, error)
	// 获取活动详情
	GetActivity(context.Context, *GetActivityRequest) (*GetActivityResponse, error)
	// 获取活动列表
	GetActivityList(context.Context, *GetActivityListRequest) (*GetActivityListResponse, error)
	// 分发活动优惠券
	DistributeActivityCoupons(context.Context, *DistributeActivityCouponsRequest) (*DistributeActivityCouponsResponse, error)
	mustEmbedUnimplementedCouponServiceServer()
}

// UnimplementedCouponServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedCouponServiceServer struct{}

func (UnimplementedCouponServiceServer) GrantCoupon(context.Context, *GrantCouponRequest) (*GrantCouponResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GrantCoupon not implemented")
}
func (UnimplementedCouponServiceServer) GetUserCoupons(context.Context, *GetUserCouponsRequest) (*GetUserCouponsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserCoupons not implemented")
}
func (UnimplementedCouponServiceServer) GetAvailableCoupons(context.Context, *GetAvailableCouponsRequest) (*GetAvailableCouponsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAvailableCoupons not implemented")
}
func (UnimplementedCouponServiceServer) ValidateCoupon(context.Context, *ValidateCouponRequest) (*ValidateCouponResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateCoupon not implemented")
}
func (UnimplementedCouponServiceServer) UseCoupon(context.Context, *UseCouponRequest) (*UseCouponResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UseCoupon not implemented")
}
func (UnimplementedCouponServiceServer) CreateActivity(context.Context, *CreateActivityRequest) (*CreateActivityResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateActivity not implemented")
}
func (UnimplementedCouponServiceServer) UpdateActivity(context.Context, *UpdateActivityRequest) (*UpdateActivityResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateActivity not implemented")
}
func (UnimplementedCouponServiceServer) DeleteActivity(context.Context, *DeleteActivityRequest) (*DeleteActivityResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteActivity not implemented")
}
func (UnimplementedCouponServiceServer) GetActivity(context.Context, *GetActivityRequest) (*GetActivityResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetActivity not implemented")
}
func (UnimplementedCouponServiceServer) GetActivityList(context.Context, *GetActivityListRequest) (*GetActivityListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetActivityList not implemented")
}
func (UnimplementedCouponServiceServer) DistributeActivityCoupons(context.Context, *DistributeActivityCouponsRequest) (*DistributeActivityCouponsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DistributeActivityCoupons not implemented")
}
func (UnimplementedCouponServiceServer) mustEmbedUnimplementedCouponServiceServer() {}
func (UnimplementedCouponServiceServer) testEmbeddedByValue()                       {}

// UnsafeCouponServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to CouponServiceServer will
// result in compilation errors.
type UnsafeCouponServiceServer interface {
	mustEmbedUnimplementedCouponServiceServer()
}

func RegisterCouponServiceServer(s grpc.ServiceRegistrar, srv CouponServiceServer) {
	// If the following call pancis, it indicates UnimplementedCouponServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&CouponService_ServiceDesc, srv)
}

func _CouponService_GrantCoupon_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GrantCouponRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServiceServer).GrantCoupon(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CouponService_GrantCoupon_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServiceServer).GrantCoupon(ctx, req.(*GrantCouponRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CouponService_GetUserCoupons_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserCouponsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServiceServer).GetUserCoupons(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CouponService_GetUserCoupons_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServiceServer).GetUserCoupons(ctx, req.(*GetUserCouponsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CouponService_GetAvailableCoupons_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAvailableCouponsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServiceServer).GetAvailableCoupons(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CouponService_GetAvailableCoupons_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServiceServer).GetAvailableCoupons(ctx, req.(*GetAvailableCouponsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CouponService_ValidateCoupon_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateCouponRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServiceServer).ValidateCoupon(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CouponService_ValidateCoupon_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServiceServer).ValidateCoupon(ctx, req.(*ValidateCouponRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CouponService_UseCoupon_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UseCouponRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServiceServer).UseCoupon(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CouponService_UseCoupon_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServiceServer).UseCoupon(ctx, req.(*UseCouponRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CouponService_CreateActivity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateActivityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServiceServer).CreateActivity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CouponService_CreateActivity_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServiceServer).CreateActivity(ctx, req.(*CreateActivityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CouponService_UpdateActivity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateActivityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServiceServer).UpdateActivity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CouponService_UpdateActivity_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServiceServer).UpdateActivity(ctx, req.(*UpdateActivityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CouponService_DeleteActivity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteActivityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServiceServer).DeleteActivity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CouponService_DeleteActivity_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServiceServer).DeleteActivity(ctx, req.(*DeleteActivityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CouponService_GetActivity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetActivityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServiceServer).GetActivity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CouponService_GetActivity_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServiceServer).GetActivity(ctx, req.(*GetActivityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CouponService_GetActivityList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetActivityListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServiceServer).GetActivityList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CouponService_GetActivityList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServiceServer).GetActivityList(ctx, req.(*GetActivityListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CouponService_DistributeActivityCoupons_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DistributeActivityCouponsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServiceServer).DistributeActivityCoupons(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CouponService_DistributeActivityCoupons_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServiceServer).DistributeActivityCoupons(ctx, req.(*DistributeActivityCouponsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// CouponService_ServiceDesc is the grpc.ServiceDesc for CouponService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var CouponService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "coupon.CouponService",
	HandlerType: (*CouponServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GrantCoupon",
			Handler:    _CouponService_GrantCoupon_Handler,
		},
		{
			MethodName: "GetUserCoupons",
			Handler:    _CouponService_GetUserCoupons_Handler,
		},
		{
			MethodName: "GetAvailableCoupons",
			Handler:    _CouponService_GetAvailableCoupons_Handler,
		},
		{
			MethodName: "ValidateCoupon",
			Handler:    _CouponService_ValidateCoupon_Handler,
		},
		{
			MethodName: "UseCoupon",
			Handler:    _CouponService_UseCoupon_Handler,
		},
		{
			MethodName: "CreateActivity",
			Handler:    _CouponService_CreateActivity_Handler,
		},
		{
			MethodName: "UpdateActivity",
			Handler:    _CouponService_UpdateActivity_Handler,
		},
		{
			MethodName: "DeleteActivity",
			Handler:    _CouponService_DeleteActivity_Handler,
		},
		{
			MethodName: "GetActivity",
			Handler:    _CouponService_GetActivity_Handler,
		},
		{
			MethodName: "GetActivityList",
			Handler:    _CouponService_GetActivityList_Handler,
		},
		{
			MethodName: "DistributeActivityCoupons",
			Handler:    _CouponService_DistributeActivityCoupons_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "coupon.proto",
}
