syntax = "proto3";

package order;
option go_package=".;order";

// 基础请求响应
message Request {
  string ping = 1;
}

message Response {
  string pong = 1;
}

// 基于预订创建订单请求
message CreateOrderFromReservationRequest {
  int64 reservation_id = 1;
  int64 user_id = 2;
  int64 pickup_location_id = 3;
  int64 return_location_id = 4;
  string notes = 5;
  int32 payment_method = 6;       // 1:支付宝 2:微信
  double expected_total_amount = 7; // 前端计算的预期金额
}

// 基于预订创建订单响应
message CreateOrderFromReservationResponse {
  int64 code = 1;
  string message = 2;
  int64 order_id = 3;
  string order_sn = 4;
  double total_amount = 5;
  string payment_url = 6;
}

// 订单信息
message OrderInfo {
  int64 id = 1;
  int64 user_id = 2;
  int64 vehicle_id = 3;
  int64 reservation_id = 4;
  string order_sn = 5;
  int64 pickup_location_id = 6;
  int64 return_location_id = 7;
  string pickup_time = 8;
  string return_time = 9;
  int32 rental_days = 10;
  double daily_rate = 11;
  double total_amount = 12;
  int32 status = 13;
  int32 payment = 14;
  int32 payment_status = 15;
  string payment_url = 16;
  string alipay_trade_no = 17;
  string notes = 18;
  string created_at = 19;
  string updated_at = 20;
}

// 获取订单详情请求
message GetOrderRequest {
  int64 order_id = 1;
  string order_sn = 2; // order_id 和 order_sn 二选一
}

// 获取订单详情响应
message GetOrderResponse {
  int64 code = 1;
  string message = 2;
  OrderInfo order = 3;
}

// 更新订单状态请求
message UpdateOrderStatusRequest {
  int64 order_id = 1;
  string order_sn = 2; // order_id 和 order_sn 二选一
  int32 status = 3;
}

// 更新订单状态响应
message UpdateOrderStatusResponse {
  int64 code = 1;
  string message = 2;
}

// 获取用户订单列表请求
message GetUserOrderListRequest {
  int64 user_id = 1;
  int32 page = 2;
  int32 page_size = 3;
  string status = 4; // 可选的状态筛选
  string payment_status = 5; // 可选的支付状态筛选
}

// 获取用户订单列表响应
message GetUserOrderListResponse {
  int64 code = 1;
  string message = 2;
  repeated OrderInfo orders = 3;
  int64 total = 4;
}



// 取消订单请求
message CancelOrderRequest {
  int64 order_id = 1;
  string order_sn = 2; // order_id 和 order_sn 二选一
  int64 user_id = 3;   // 用于验证订单所有权
  string reason = 4;   // 取消原因
}

// 取消订单响应
message CancelOrderResponse {
  int64 code = 1;
  string message = 2;
}

// 检查用户未支付订单请求
message CheckUserUnpaidOrderRequest {
  int64 user_id = 1;
}

// 检查用户未支付订单响应
message CheckUserUnpaidOrderResponse {
  int64 code = 1;
  string message = 2;
  bool has_unpaid_order = 3;
  OrderInfo unpaid_order = 4; // 如果有未支付订单，返回订单信息
}

service Order {
  rpc Ping(Request) returns(Response);

  // 订单管理
  rpc CreateOrderFromReservation(CreateOrderFromReservationRequest) returns(CreateOrderFromReservationResponse); // 基于预订创建订单
  rpc GetOrder(GetOrderRequest) returns(GetOrderResponse); // 获取订单详情
  rpc UpdateOrderStatus(UpdateOrderStatusRequest) returns(UpdateOrderStatusResponse); // 更新订单状态
  rpc GetUserOrderList(GetUserOrderListRequest) returns(GetUserOrderListResponse); // 获取用户订单列表
  rpc CancelOrder(CancelOrderRequest) returns(CancelOrderResponse); // 取消订单
  rpc CheckUserUnpaidOrder(CheckUserUnpaidOrderRequest) returns(CheckUserUnpaidOrderResponse); // 检查用户未支付订单


}
