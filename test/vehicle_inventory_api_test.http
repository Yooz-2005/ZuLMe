### 车辆库存管理 API 测试文件
### 使用 VS Code REST Client 扩展运行这些测试

@baseUrl = http://localhost:8888
@userToken = your-user-jwt-token-here
@merchantToken = your-merchant-jwt-token-here

### 1. 检查车辆可用性（公开接口）
POST {{baseUrl}}/vehicle-inventory/check-availability
Content-Type: application/json

{
  "vehicle_id": 1,
  "start_date": "2024-01-15",
  "end_date": "2024-01-20"
}

### 2. 获取可用车辆列表（公开接口）
POST {{baseUrl}}/vehicle-inventory/available-vehicles
Content-Type: application/json

{
  "start_date": "2024-01-15",
  "end_date": "2024-01-20",
  "merchant_id": 1,
  "type_id": 2,
  "brand_id": 3,
  "price_min": 100.0,
  "price_max": 500.0
}

### 2.1 获取车辆库存日历（公开接口）
GET {{baseUrl}}/vehicle-inventory/calendar?vehicle_id=1&start_date=2024-01-01&end_date=2024-01-31

### 3. 创建预订（需要用户认证）
POST {{baseUrl}}/vehicle-inventory/reservation/create
Content-Type: application/json
Authorization: Bearer {{userToken}}

{
  "vehicle_id": 1,
  "order_id": 1001,
  "start_date": "2024-01-15",
  "end_date": "2024-01-20"
}

### 4. 更新预订状态（系统内部调用，无需认证）
PUT {{baseUrl}}/vehicle-inventory/reservation/status
Content-Type: application/json

{
  "order_id": 1001,
  "status": "rented"
}

### 5. 获取库存统计（需要商家认证）
GET {{baseUrl}}/vehicle-inventory/stats
Authorization: Bearer {{merchantToken}}

### 6. 设置维护状态（需要商家认证）
POST {{baseUrl}}/vehicle-inventory/maintenance/set
Content-Type: application/json
Authorization: Bearer {{merchantToken}}

{
  "vehicle_id": 1,
  "start_date": "2024-01-21",
  "end_date": "2024-01-23",
  "notes": "定期保养",
  "created_by": 1
}

### 7. 获取维护计划（需要商家认证）
GET {{baseUrl}}/vehicle-inventory/maintenance/schedule?vehicle_id=1
Authorization: Bearer {{merchantToken}}

### 8. 获取库存报表（需要商家认证）
GET {{baseUrl}}/vehicle-inventory/report?merchant_id=1&start_date=2024-01-01&end_date=2024-01-31
Authorization: Bearer {{merchantToken}}

### 9. 测试错误情况 - 无效的车辆ID

### 10. 测试错误情况 - 无效的车辆ID
POST {{baseUrl}}/vehicle-inventory/check-availability
Content-Type: application/json

{
  "vehicle_id": 999999,
  "start_date": "2024-01-15",
  "end_date": "2024-01-20"
}

### 11. 测试错误情况 - 无效的日期格式
POST {{baseUrl}}/vehicle-inventory/check-availability
Content-Type: application/json

{
  "vehicle_id": 1,
  "start_date": "2024/01/15",
  "end_date": "2024/01/20"
}

### 12. 测试错误情况 - 缺少必需参数
POST {{baseUrl}}/vehicle-inventory/check-availability
Content-Type: application/json

{
  "vehicle_id": 1,
  "start_date": "2024-01-15"
}

### 13. 测试错误情况 - 未授权访问（用户接口）
POST {{baseUrl}}/vehicle-inventory/reservation/create
Content-Type: application/json

{
  "vehicle_id": 1,
  "order_id": 1001,
  "start_date": "2024-01-15",
  "end_date": "2024-01-20"
}

### 14. 完整的预订流程测试
### 步骤1: 检查可用性
POST {{baseUrl}}/vehicle-inventory/check-availability
Content-Type: application/json

{
  "vehicle_id": 1,
  "start_date": "2024-02-01",
  "end_date": "2024-02-05"
}

### 步骤2: 创建预订（用户操作）
POST {{baseUrl}}/vehicle-inventory/reservation/create
Content-Type: application/json
Authorization: Bearer {{userToken}}

{
  "vehicle_id": 1,
  "order_id": 1002,
  "start_date": "2024-02-01",
  "end_date": "2024-02-05"
}

### 步骤3: 更新为租用状态（系统内部调用）
PUT {{baseUrl}}/vehicle-inventory/reservation/status
Content-Type: application/json

{
  "order_id": 1002,
  "status": "rented"
}

### 步骤4: 完成租用（系统内部调用）
PUT {{baseUrl}}/vehicle-inventory/reservation/status
Content-Type: application/json

{
  "order_id": 1002,
  "status": "completed"
}

### 15. 维护管理流程测试
### 步骤1: 设置维护
POST {{baseUrl}}/vehicle-inventory/maintenance/set
Content-Type: application/json
Authorization: Bearer {{merchantToken}}

{
  "vehicle_id": 2,
  "start_date": "2024-02-10",
  "end_date": "2024-02-12",
  "notes": "年度大保养",
  "created_by": 1
}

### 步骤2: 查看维护计划
GET {{baseUrl}}/vehicle-inventory/maintenance/schedule?vehicle_id=2
Authorization: Bearer {{merchantToken}}

### 16. 批量查询测试
### 获取多个车辆的可用性
POST {{baseUrl}}/vehicle-inventory/available-vehicles
Content-Type: application/json

{
  "start_date": "2024-02-15",
  "end_date": "2024-02-20",
  "merchant_id": 1
}

### 17. 统计和报表测试
### 获取当前统计
GET {{baseUrl}}/vehicle-inventory/stats
Authorization: Bearer {{merchantToken}}

### 获取月度报表
GET {{baseUrl}}/vehicle-inventory/report?start_date=2024-02-01&end_date=2024-02-29
Authorization: Bearer {{merchantToken}}

### 17. 日历视图测试（公开接口）
GET {{baseUrl}}/vehicle-inventory/calendar?vehicle_id=1&start_date=2024-02-01&end_date=2024-02-29

### 18. 权限测试 - 用户尝试访问商家接口（应该失败）
GET {{baseUrl}}/vehicle-inventory/stats
Authorization: Bearer {{userToken}}

### 19. 权限测试 - 商家尝试创建预订（应该失败，预订应该由用户创建）
POST {{baseUrl}}/vehicle-inventory/reservation/create
Content-Type: application/json
Authorization: Bearer {{merchantToken}}

{
  "vehicle_id": 1,
  "order_id": 1003,
  "start_date": "2024-03-01",
  "end_date": "2024-03-05"
}
