# 新预订流程测试

@baseUrl = http://localhost:8888
@userToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MzQxNzI4MDAsImlhdCI6MTczNDA4NjQwMCwiaXNzIjoiWnVMTWUiLCJzdWIiOiJ1c2VyIiwidXNlcklkIjoxfQ.your-user-token

### 1. 检查车辆可用性（确保车辆可用）
POST {{baseUrl}}/vehicle-inventory/check-availability
Content-Type: application/json

{
  "vehicle_id": 1,
  "start_date": "2024-01-15",
  "end_date": "2024-01-20"
}

### 2. 创建预订（新流程 - 不需要order_id）
POST {{baseUrl}}/vehicle-inventory/reservation/create
Content-Type: application/json
Authorization: Bearer {{userToken}}

{
  "vehicle_id": 1,
  "start_date": "2024-01-15",
  "end_date": "2024-01-20",
  "notes": "需要儿童座椅，希望是白色车辆"
}

### 3. 基于预订创建订单（框架测试）
POST {{baseUrl}}/order/create-from-reservation
Content-Type: application/json
Authorization: Bearer {{userToken}}

{
  "reservation_id": 123,
  "pickup_location_id": 1,
  "return_location_id": 2,
  "notes": "下午3点取车",
  "payment_method": 1,
  "expected_total_amount": 1500.00
}

### 预期结果：
# 步骤1应该返回：车辆可用
# 步骤2应该返回：预订创建成功，包含reservation_id
# 步骤3应该返回：订单创建成功（临时响应）
